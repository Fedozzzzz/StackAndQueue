#include "Header.h"

int main()
{
	string strInc1 = "[()}]";
	string strCor1 = "[({})]";
	string strCor2 = "[[]]{{{([])}}}";
	string strInc2 = "{}{{{])";
	string str1 = "(1+2)*4";
	string str2 = "2*8+6";
	string str3 = "2^3+6";
	string str4 = "8/2+3";
	string str5 = "(8+2*5)/(1+3*2-4)";
	string str6 = "7+8*5/(1-3)^2";
	string str7 = "8*9-3*(7*6)*5*(2^4-2)";
	string str8 = "1+1+8*6^(2*5-7)";
	string str9 = "3+4*2/(1-5)^2";
	string str10 = "3+9-7)";
	string str11 = "1+1+8*6^(13-2*5)";
	string str12 = "(10-9)*7";
	convertingRPN(str1);
	//RPN(str);
	////cout << "+\n";
	Stack<char> stackCh;
	//cout << isCorrectString(str1) << endl;
	//cout << solutionRPN(str1) << endl;
	//cout << solutionRPN(str2) << endl;
	//cout << solutionRPN(str3) << endl;
	//cout << solutionRPN(str4) << endl;
	//cout << solutionRPN(str5) << endl;
	//cout << solutionRPN(str6) << endl;
	//cout << solutionRPN(str7) << endl;
	//cout << solutionRPN(str8) << endl;
	//cout << solutionRPN(str9) << endl;
	//cout << solutionRPN(str10) << endl;
	//cout << solutionRPN(str11) << endl;
	cout << solutionRPN(str12) << endl;
	//cout << RPN(str) << endl;
	//cout << RPN(str2) << endl;
	//cout << RPN(str3) << endl;
	//cout << RPN(str4) << endl;
	//cout << RPN(str5) << endl;
	//cout << RPN(str6) << endl;
	//cout << RPN(str7) << endl;
	//cout << RPN(str8) << endl;
	//Stack<int> st;
	//st.push(1);
	//st.push(2);
	//paren(str1[1], stackCh, str1);
	//cout << st << endl;
	//st.printStack();
	//int max = st.pop();
	//st.push(6);
	//st.printStack();
	//cout << st.getTop() << endl;
	//cout << endl;
	//Stack<int> st1;
	//cout << st1.isEmpty() << endl;
	//cout << isCorrectString(str) << endl;
	//cout << isCorrectString(strInc2) << endl;
	//cout << isCorrectString(strInc1) << endl;
	//cout << isCorrectString(strCor1) << endl;
	//cout << isCorrectString(strCor2) << endl;
	//cout << isCorrectString(str1) << endl;
	//cout << isCorrectString(strCor) << endl;
	//st.printStack();
	system("pause");
	return 0;
}